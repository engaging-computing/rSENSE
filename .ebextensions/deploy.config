option_settings:
  - namespace: aws:autoscaling:launchconfiguration
    option_name: BlockDeviceMappings
    value: /dev/sdh=:10
  - option_name: BUNDLE_DISABLE_SHARED_GEMS
    value: "1"
  - option_name: BUNDLE_PATH
    value: "vendor/bundle"

packages:
  yum:
    git: []
    sendmail: []
    sendmail-cf: []
    libXinerama.x86_64: []
    cups-libs: []
    dbus-glib: []

files:
  "/tmp/libreofficeinstall.sh" :
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      wget http://download.documentfoundation.org/libreoffice/stable/5.4.3/rpm/x86_64/LibreOffice_5.4.3_Linux_x86-64_rpm.tar.gz
      tar -xvzf LibreOffice_5.4.3_Linux_x86-64_rpm.tar.gz
      cd LibreOffice_5.4.3.2_Linux_x86-64_rpm/RPMS/
      yum install *.rpm
      cd /
      rm -r /tmp/LibreOffice_5.4.3_Linux_x86-64_rpm.tar.gz /tmp/LibreOffice_5.4.3.2_Linux_x86-64_rpm
  "/etc/nginx/conf.d/proxy.conf" :
    mode: "000755"
    owner: root
    group: root
    content: |
      client_max_body_size  200M;
      proxy_connect_timeout 1800;
      proxy_send_timeout    1800;
      proxy_read_timeout    1800;
      send_timeout          1800;
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/03_webapp_user.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      sudo chown -R webapp:webapp /home/webapp
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/03_nginx.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      sudo service nginx reload
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/13_ebs_perm.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      if ! mount | grep /dev/xvdh > /dev/null; then
        sudo mkfs -t ext4 /dev/sdh
        sudo mkdir /media/volume1
        sudo mount /dev/sdh /media/volume1
      fi
      sudo groupadd appdev
      sudo usermod -aG appdev ec2-user
      sudo usermod -aG appdev webapp
      sudo chmod -R 770 /media/volume1
      sudo aws s3 sync $MEDIA_BUCKET/media/ /media/volume1
      sudo chown -R webapp:appdev /media/volume1
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/post/01_public_media.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      ln -s /media/volume1 /var/app/current/public/media
      sudo chown -R webapp:appdev /var/app/current/public/media
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/03_git.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      cd /var/app/ondeck/
      sudo mkdir git; cd git
      sudo git clone https://github.com/isenseDev/rSENSE.git
      cd rSENSE; sudo cp -r .git/ ../../
      cd /var/app/ondeck/
      sudo rm -rf git/
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/02_postgres_setup.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      sudo yum install postgresql postgresql-server postgresql-devel postgresql-contrib postgresql-docs
      sudo service postgresql initdb
      sudo service postgresql start
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/11_db_create.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
      EB_APP_STAGING_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_staging_dir)
      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)
      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)

      . $EB_SUPPORT_DIR/envvars

      . $EB_SCRIPT_DIR/use-app-ruby.sh

      cd $EB_APP_STAGING_DIR
      su -s /bin/bash -c "leader_only bundle exec rake db:create" $EB_APP_USER
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/08_swap_create.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      sudo dd if=/dev/zero of=/swapfile bs=1024 count=128k
      sudo mkswap /swapfile
      sudo swapon /swapfile
      true
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/09_sendmail.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      cd /etc/mail
      make all
      /etc/init.d/sendmail restart
      true
  "/etc/ssl/cert_and_chain.pem":
    mode: "000444"
    owner: root
    group: root
    authentication: S3Access
    source: https://s3.amazonaws.com/rsense-ssl/cert_and_chain.pem
  "/etc/ssl/cs.uml.edu.key":
    mode: "000440"
    owner: root
    group: root
    authentication: S3Access
    source: https://s3.amazonaws.com/rsense-ssl/cs.uml.edu.key
  "/etc/mail/sendmail.mc":
    mode: "000755"
    owner: root
    group: root
    authentication: S3Access
    source: https://s3.amazonaws.com/rsense-secrets/sendmail.mc
  "/etc/ImageMagick/policy.xml":
    mode: "000755"
    owner: root
    group: root
    authentication: S3Access
    source: https://s3.amazonaws.com/rsense-secrets/policy.xml
  "/opt/elasticbeanstalk/support/conf/pumaconf.rb":
    mode: "000755"
    owner: root
    group: root
    authentication: S3Access
    source: https://s3.amazonaws.com/rsense-secrets/pumaconf.rb
  "/home/webapp/.recaptcha_key":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    authentication: S3Access
    source: https://s3.amazonaws.com/elasticbeanstalk-us-east-1-203232684667/.recaptcha_key
  "/home/ec2-user/.aws/credentials":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    authentication: S3Access
    source: https://s3.amazonaws.com/rsense-secrets/credentials
  "/home/ec2-user/.aws/config":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    authentication: S3Access
    source: https://s3.amazonaws.com/rsense-secrets/config
  "/etc/nginx/nginx.conf":
    mode: "000755"
    owner: root
    group: root
    authentication: S3Access
    source: https://s3.amazonaws.com/rsense-ssl/rsense-nginx.conf
  "/etc/cron.d/imagebackup":
    mode: "000644"
    owner: root
    group: root
    content: |
      0 * * * * root /home/ec2-user/bkpimgs.sh

  "/etc/cron.d/memlog":
    mode: "000644"
    owner: root
    group: root
    content: |
      0,30 * * * * root /home/ec2-user/free.sh >> /var/log/rsensememlog

  "/etc/cron.d/restartpuma":
    mode: "000644"
    owner: root
    group: root
    content: |
      0 4 * * * root /home/ec2-user/restart_puma.sh

  "/etc/cron.d/restartpumaif":
    mode: "000644"
    owner: root
    group: root
    content: |
      20,40 * * * * root /home/ec2-user/restart_puma_if.sh

  "/home/ec2-user/bkpimgs.sh":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/bin/bash
      sudo aws s3 sync /media/volume1 $MEDIA_BUCKET/media/
      date > /tmp/imgbkplastdate
      exit 0
  "/home/ec2-user/restart_puma.sh":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/bin/bash
      sudo kill -s SIGUSR2 `cat /var/run/puma/puma.pid`
      date >> /tmp/pumarestartlastdate
      exit 0
  "/home/ec2-user/restart_puma_if.sh":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/bin/bash
      free=`free -mt | grep Total | awk '{print $4}'`
      if [ $free -lt 500 ]; then
        sudo kill -s SIGUSR2 `cat /var/run/puma/puma.pid`
        date >> /tmp/pumarestartlastdate
      fi
      exit 0
  "/home/ec2-user/free.sh":
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    content: |
      #!/bin/bash
      echo "      date     time $(free -m | grep total | sed -E 's/^    (.*)/\1/g')"
      echo "$(date '+%Y-%m-%d %H:%M:%S') $(free -m | grep Mem: | sed 's/Mem://g')"
      exit 0

commands:
  install_libreoffice:
    command: 'yes | sudo ./libreofficeinstall.sh'
    cwd: /tmp
    

Resources:
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Access:
          type: S3
          roleName: aws-elasticbeanstalk-ec2-role
          buckets: elasticbeanstalk-us-east-1-203232684667


