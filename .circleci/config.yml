version: 2
jobs:
  build:
    working_directory: ~/isenseDev/rSENSE
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    # When we update ruby version we can use a dedicated image https://hub.docker.com/r/circleci/ruby/tags/
    # For now we use a general Ubuntu image with rvm
    docker:
    - image: circleci/build-image:ubuntu-14.04-XXL-upstart-1189-5614f37
      command: /sbin/init
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - run:
        working_directory: ~/isenseDev/rSENSE
        command: rm -f isenseDev/rSENSE/.rvmrc; echo 2.1.1 > isenseDev/rSENSE/.ruby-version; rvm use 2.1.1 --default
    # dependencies: pre:
    - run: sudo apt-get update; sudo apt-get install libreoffice libreoffice-calc unoconv
    - run: sudo apt-get install ruby-railties-4.0 bundler
    - run: sudo apt-get install qt5-default libqt5webkit5-dev gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x
    - run: yes | gem uninstall bundler
    - run: gem install bundler
    - run: bundle install
    - run: bundle exec rake assets:precompile
    - run: echo -e "export RAILS_ENV=test\nexport RACK_ENV=test" >> $BASH_ENV
    - run: 'bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
        --jobs=4 --retry=3 '
    # database: override:
    - run: bundle exec rake db:preprep
    - run: RAILS_ENV=test bundle exec rake db:migrate --trace
    - run: bundle exec rake db:test:prepare
    # Test
    - run: rake
    # Run blackduck security scan after test
    - run: bash <(curl -s https://copilot.blackducksoftware.com/ci/circle/scripts/upload)
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
